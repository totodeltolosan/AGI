[project]
name = "eve_genesis___crew_a_construction_eveil"
version = "1.0.0"
description = "EVE GENESIS Crew A - L'Ingénieur Adaptatif & Supervisable avec Ollama local"
authors = [
    { name = "Toni Catalano", email = "toni@eve-genesis.local" }
]
requires-python = ">=3.10,<3.14"
license = { text = "MIT" }
readme = "README.md"
keywords = ["ai", "crew", "ollama", "eve-genesis", "construction", "eveil"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    # CrewAI Core - Version IDENTIQUE au Crew B pour cohérence
    "crewai==0.165.1",

    # CrewAI Tools - Version fixe pour stabilité
    "crewai-tools==0.62.3",

    # Dépendances Ollama et communication locale
    "requests>=2.31.0",
    "httpx>=0.25.0",

    # Optimisations performance pour 41 agents
    "asyncio-throttle>=1.0.2",
    "aiofiles>=23.0.0",

    # Gestion de données et fichiers
    "pydantic>=2.0.0",
    "pyyaml>=6.0.0",
    "toml>=0.10.2",

    # Monitoring et logs pour debug
    "rich>=13.0.0",
    "loguru>=0.7.0",

    # Utilitaires système pour diagnostics
    "psutil>=5.9.0",
    "platform-utils>=1.0.0",
]

[project.optional-dependencies]
# Dépendances pour développement et debug
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]

# Dépendances pour monitoring avancé
monitoring = [
    "prometheus-client>=0.17.0",
    "grafana-api>=1.0.3",
]

[project.urls]
Homepage = "https://github.com/your-org/eve-genesis"
Documentation = "https://eve-genesis.readthedocs.io"
Repository = "https://github.com/your-org/eve-genesis.git"
"Bug Tracker" = "https://github.com/your-org/eve-genesis/issues"

[project.scripts]
# Scripts d'entrée pour EVE GENESIS Crew A
eve_genesis___crew_a_construction_eveil = "eve_genesis___crew_a_construction_eveil.main:run"

# Scripts spécialisés pour différents modes
eve-crew-a-run = "eve_genesis___crew_a_construction_eveil.main:run"
eve-crew-a-train = "eve_genesis___crew_a_construction_eveil.main:train"
eve-crew-a-test = "eve_genesis___crew_a_construction_eveil.main:test"
eve-crew-a-replay = "eve_genesis___crew_a_construction_eveil.main:replay"

# Alias compatibilité
run_crew = "eve_genesis___crew_a_construction_eveil.main:run"
train = "eve_genesis___crew_a_construction_eveil.main:train"
replay = "eve_genesis___crew_a_construction_eveil.main:replay"
test = "eve_genesis___crew_a_construction_eveil.main:test"

[build-system]
requires = ["hatchling>=1.18.0"]
build-backend = "hatchling.build"

[tool.crewai]
type = "crew"
# Configuration spécifique EVE GENESIS Crew A
environment = "local_ollama"
agents_count = 41
optimization_level = "high"
memory_mode = "disabled"

[tool.hatch.version]
path = "src/eve_genesis___crew_a_construction_eveil/__init__.py"

[tool.hatch.build.targets.wheel]
# Configuration corrigée pour le packaging
packages = ["src/eve_genesis___crew_a_construction_eveil"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/README.md",
    "/LICENSE",
]

# Configuration Black pour formatage de code
[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # Répertoires à exclure
  \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

# Configuration MyPy pour vérification de types
[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

# Configuration pytest
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "ollama: marks tests requiring Ollama",
]

# Configuration pour le linting
[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "E501", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    ".env",
]

# Configuration pour les imports
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["eve_genesis___crew_a_construction_eveil"]

# Configuration spécifique EVE GENESIS Crew A
[tool.eve_genesis]
crew_type = "construction_eveil"
agent_count = 41
optimization_target = "ollama_local"
resource_constraints = {
    max_memory_mb = 6144,
    max_cpu_percent = 60,
    timeout_seconds = 90
}

# Monitoring configuration
[tool.eve_genesis.monitoring]
enable_metrics = true
log_level = "INFO"
performance_tracking = true
resource_monitoring = true

# Ollama specific configuration
[tool.eve_genesis.ollama]
base_url = "http://localhost:11434"
model = "llama3:8b"
timeout = 90
retry_attempts = 3
health_check_interval = 30