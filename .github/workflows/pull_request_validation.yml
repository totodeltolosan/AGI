name: AGI Constitutional Audit

# Se d√©clenche sur chaque Pull Request visant la branche 'main'
on:
  pull_request:
    branches: [ main ]

jobs:
  constitutional-check:
    name: Constitutional Check
    runs-on: ubuntu-latest
    steps:
      - name: 1. Checkout du code source
        uses: actions/checkout@v3

      - name: 2. Mise en place de l'environnement Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: 3. Installation des d√©pendances (sera activ√© plus tard)
        run: echo "√âtape d'installation des d√©pendances √† venir."
        # run: pip install -r requirements.txt

      - name: 4. Ex√©cution de l'Audit Constitutionnel Complet
        id: audit
        run: |
          # Ex√©cute l'audit et sauvegarde la sortie dans un fichier
          python run_agi_audit.py --full --target . > audit_report.txt
        continue-on-error: true # Important pour que l'√©tape suivante s'ex√©cute m√™me en cas d'√©chec

      - name: 5. Publication du Rapport d'Audit dans la Pull Request
        # Cette √©tape ne s'ex√©cute que si l'audit a √©chou√©
        if: steps.audit.outcome == 'failure'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('audit_report.txt', 'utf8');
            const body = \`**üö® Audit Constitutionnel √âchou√© üö®**

            \`\`\`
            \${report}
            \`\`\`

            *Cette v√©rification est mandat√©e par la Loi DEV-TOOL-002 de iaGOD.json.*\`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
            
            core.setFailed('L'audit constitutionnel a r√©v√©l√© des violations.');
