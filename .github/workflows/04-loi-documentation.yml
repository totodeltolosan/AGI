name: "üìö NIVEAU 2 : G√©n√©ral Archiviste - Loi Documentation"
run-name: "üìö Audit Documentation - Cha√Æne Compl√®te Ouvriers/Qualiticiens"

on:
  workflow_call:
    inputs:
      seuil_documentation:
        description: "Pourcentage minimum de documentation requis"
        required: false
        default: 30
        type: number
      extensions_analysees:
        description: "Extensions de fichiers √† analyser"
        required: false
        default: "py"
        type: string
      repertoire_cible:
        description: "R√©pertoire √† analyser"
        required: false
        default: "."
        type: string
      audit_id:
        description: "Identifiant unique de l'audit"
        required: false
        type: string
        default: "audit-doc"

    outputs:
      rapport_documentation:
        description: "Chemin du rapport final de documentation"
        value: ${{ jobs.formater_rapport.outputs.rapport_final }}
      taux_documentation:
        description: "Taux global de documentation calcul√©"
        value: ${{ jobs.calculer_metriques.outputs.taux_global }}
      audit_reussi:
        description: "Indicateur de r√©ussite de l'audit"
        value: ${{ jobs.valider_calculateur.outputs.validation_reussie }}

env:
  AUDIT_OPERATION: "loi-documentation"
  TIMEOUT_DEFAULT: 10

jobs:
  # ============================================
  # √âTAPE 1: SCANNER LES FICHIERS (NIVEAU 6)
  # ============================================
  scanner_fichiers:
    name: "üîç Scanner les Fichiers de Documentation"
    uses: ./.github/workflows/06-01_scanner-fichiers.yml
    with:
      dossiers_cibles: ${{ inputs.repertoire_cible }}
      extensions_cibles: ${{ inputs.extensions_analysees }}
      patterns_exclusion: '["__pycache__", ".git", "node_modules", ".pytest_cache"]'
      nom_operation: "scan-documentation-${{ inputs.audit_id }}"

  # ============================================
  # √âTAPE 2: EXTRAIRE LA DOCUMENTATION (NIVEAU 4)
  # ============================================
  extraire_documentation:
    name: "üìñ Extraire la Documentation"
    needs: scanner_fichiers
    uses: ./.github/workflows/04-01-doc-extracteur.yml
    with:
      liste_fichiers: ${{ needs.scanner_fichiers.outputs.fichiers_trouves }}
      types_documentation: '["docstring", "comments", "README"]'
      analyse_ast: true
      nom_operation: "extraction-doc-${{ inputs.audit_id }}"

  # ============================================
  # √âTAPE 3: VALIDER L'EXTRACTION (NIVEAU 5)
  # ============================================
  valider_extraction:
    name: "‚úÖ Valider l'Extraction"
    needs: extraire_documentation
    uses: ./.github/workflows/05-01-doc-valid-extracteur.yml
    with:
      artefact_extraction: ${{ needs.extraire_documentation.outputs.donnees_extraites }}
      schema_attendu: "documentation-extraction-v1"
      validations_strictes: true
      nom_operation: "validation-extraction-${{ inputs.audit_id }}"

  # ============================================
  # √âTAPE 4: CALCULER LES M√âTRIQUES (NIVEAU 4)
  # ============================================
  calculer_metriques:
    name: "üìä Calculer les M√©triques de Documentation"
    needs: [extraire_documentation, valider_extraction]
    if: needs.valider_extraction.outputs.validation_reussie == 'true'
    uses: ./.github/workflows/04-02-doc-calculateur.yml
    with:
      donnees_extraction: ${{ needs.extraire_documentation.outputs.donnees_extraites }}
      seuil_global: ${{ inputs.seuil_documentation }}
      seuils_par_type: '{"modules": 80, "classes": 70, "functions": 60}'
      calculs_avances: true
      nom_operation: "calcul-metriques-${{ inputs.audit_id }}"

    outputs:
      taux_global: ${{ steps.calcul.outputs.taux_global }}
      metriques_detaillees: ${{ steps.calcul.outputs.metriques_json }}

  # ============================================
  # √âTAPE 5: VALIDER LES M√âTRIQUES (NIVEAU 5)
  # ============================================
  valider_calculateur:
    name: "‚úÖ Valider les M√©triques Calcul√©es"
    needs: calculer_metriques
    uses: ./.github/workflows/05-02-doc-valid-calculateur.yml
    with:
      resultats_calcul: ${{ needs.calculer_metriques.outputs.metriques_detaillees }}
      schema_attendu: "documentation-metriques-v1"
      verification_coherence: true
      nom_operation: "validation-metriques-${{ inputs.audit_id }}"

    outputs:
      validation_reussie: ${{ steps.validation.outputs.validation_reussie }}

  # ============================================
  # √âTAPE 6: FORMATER LE RAPPORT FINAL (NIVEAU 7)
  # ============================================
  formater_rapport:
    name: "üìã Formater le Rapport Final"
    needs: [calculer_metriques, valider_calculateur]
    if: needs.valider_calculateur.outputs.validation_reussie == 'true'
    uses: ./.github/workflows/07-02_formateur-markdown.yml
    with:
      artefact_entree_json: ${{ needs.calculer_metriques.outputs.metriques_detaillees }}
      template_markdown: "rapport-documentation-complet"
      variables_contexte: |
        {
          "seuil_requis": "${{ inputs.seuil_documentation }}",
          "audit_id": "${{ inputs.audit_id }}",
          "timestamp": "${{ github.run_id }}",
          "extensions": "${{ inputs.extensions_analysees }}"
        }
      nom_operation: "rapport-doc-${{ inputs.audit_id }}"

    outputs:
      rapport_final: ${{ steps.formatage.outputs.fichier_rapport }}

  # ============================================
  # √âTAPE 7: STATUT FINAL ET COMMUNICATION
  # ============================================
  poster_statut_final:
    name: "üì¢ Poster le Statut Final"
    needs: [valider_calculateur, formater_rapport, calculer_metriques]
    if: always()
    uses: ./.github/workflows/07-03_formateur-statut.yml
    with:
      resultat: ${{ needs.valider_calculateur.outputs.validation_reussie == 'true' && needs.valider_calculateur.result == 'success' }}
      message_succes: "‚úÖ Audit Documentation R√âUSSI - Taux: ${{ needs.calculer_metriques.outputs.taux_global }}% (seuil: ${{ inputs.seuil_documentation }}%)"
      message_echec: "‚ùå Audit Documentation √âCHOU√â - Taux insuffisant ou erreur de validation"
      nom_check: "Loi Documentation"
      details_url: ${{ needs.formater_rapport.outputs.rapport_final }}

  # ============================================
  # √âTAPE 8: R√âCAPITULATIF ET ARTEFACTS
  # ============================================
  synthese_finale:
    name: "üìà Synth√®se de l'Audit Documentation"
    needs: [scanner_fichiers, extraire_documentation, calculer_metriques, valider_calculateur, formater_rapport]
    if: always()
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
    - name: "üìã R√©capitulatif de l'Audit"
      run: |
        echo "üèÅ AUDIT DOCUMENTATION TERMIN√â"
        echo "=============================="
        echo "üìÅ Fichiers scann√©s: ${{ needs.scanner_fichiers.outputs.nombre_fichiers }}"
        echo "üìñ Extraction: ${{ needs.extraire_documentation.result }}"
        echo "‚úÖ Validation extraction: ${{ needs.valider_extraction.result }}"
        echo "üìä Calcul m√©triques: ${{ needs.calculer_metriques.result }}"
        echo "‚úÖ Validation m√©triques: ${{ needs.valider_calculateur.result }}"
        echo "üìã Formatage rapport: ${{ needs.formater_rapport.result }}"
        echo ""
        echo "üéØ R√âSULTAT FINAL:"
        echo "Taux documentation: ${{ needs.calculer_metriques.outputs.taux_global }}%"
        echo "Seuil requis: ${{ inputs.seuil_documentation }}%"
        echo "Statut: $([ '${{ needs.valider_calculateur.outputs.validation_reussie }}' = 'true' ] && echo 'CONFORME ‚úÖ' || echo 'NON CONFORME ‚ùå')"

    - name: "üíæ Upload Synth√®se Compl√®te"
      uses: actions/upload-artifact@v4
      with:
        name: synthese-audit-documentation-${{ inputs.audit_id }}
        path: |
          ${{ needs.formater_rapport.outputs.rapport_final }}
          ${{ needs.calculer_metriques.outputs.metriques_detaillees }}
        retention-days: 30
        compression-level: 6

# ============================================
# NOTES ARCHITECTURALES
# ============================================
# Cette version respecte strictement l'architecture d√©finie dans:
# - hierarchie.md: Cha√Æne s√©quentielle Ouvriers‚ÜíQualiticiens
# - Systemeneuronal.md: Division Documentation avec 6 √©tapes
# - iaGOD.json: Sp√©cifications des seuils et r√®gles
#
# SUPPRIME: Le script audit_documentation.py (Contrema√Ætre invalide)
# REMPLACE PAR: Cha√Æne de jobs avec uses: et needs: (GitHub Actions natif)
#
# ARCHITECTURE RESPECT√âE:
# 1. Niveau 6: Scanner (brique atomique)
# 2. Niveau 4: Ouvriers (extraction + calcul)
# 3. Niveau 5: Qualiticiens (validation √† chaque √©tape)
# 4. Niveau 7: Nettoyeurs (formatage final)
# 5. Communication: Statut et artefacts
