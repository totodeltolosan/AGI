name: "Qualiticien : Validation Compteur Lignes"

on:
  workflow_call:
    inputs:
      artefact_resultats_bruts:
        description: "Nom de l'artefact JSON contenant les r√©sultats bruts du comptage"
        required: true
        type: string
      mode_strict:
        description: "Activer le mode de validation strict"
        required: false
        default: true
        type: boolean
    outputs:
      validation_success:
        description: "R√©sultat de la validation (true/false)"
        value: ${{ jobs.validate_compteur.outputs.success }}
      validation_errors:
        description: "Nombre d'erreurs de validation d√©tect√©es"
        value: ${{ jobs.validate_compteur.outputs.error_count }}

jobs:
  validate_compteur:
    name: "Validation sch√©ma r√©sultats compteur"
    runs-on: ubuntu-latest
    outputs:
      success: ${{ steps.validate.outputs.validation_success }}
      error_count: ${{ steps.validate.outputs.error_count }}
    
    steps:
      - name: "Checkout du code"
        uses: actions/checkout@v4
      
      - name: "Configuration Python 3.11"
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: "T√©l√©chargement de l'artefact √† valider"
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.artefact_resultats_bruts }}
          path: ./validation-input/
      
      - name: "V√©rification pr√©sence artefact"
        run: |
          echo "üîç V√©rification de la pr√©sence de l'artefact :"
          if [ -f "./validation-input/${{ inputs.artefact_resultats_bruts }}" ]; then
            echo "‚úÖ Artefact trouv√© : ${{ inputs.artefact_resultats_bruts }}"
            echo "üìä Taille : $(stat -c%s "./validation-input/${{ inputs.artefact_resultats_bruts }}") octets"
            
            # Aper√ßu du contenu JSON
            echo "üìã Aper√ßu du contenu :"
            head -5 "./validation-input/${{ inputs.artefact_resultats_bruts }}" || true
          else
            echo "‚ùå ERREUR: Artefact introuvable"
            echo "üìÅ Contenu du dossier d'entr√©e :"
            ls -la ./validation-input/ || echo "Dossier vide"
            exit 1
          fi
      
      - name: "Ex√©cution de la validation du sch√©ma"
        id: validate
        run: |
          echo "üîç Validation du sch√©ma 'resultats-bruts-compteur'"
          
          # Ex√©cution du script de validation
          if python .github/scripts/qualiticien_validation_schema.py \
            --artefact "./validation-input/${{ inputs.artefact_resultats_bruts }}" \
            --schema-type "resultats-bruts-compteur" \
            ${{ inputs.mode_strict && '--mode-strict' || '' }}; then
            
            echo "validation_success=true" >> $GITHUB_OUTPUT
            echo "error_count=0" >> $GITHUB_OUTPUT
            echo "‚úÖ VALIDATION R√âUSSIE"
            
          else
            echo "validation_success=false" >> $GITHUB_OUTPUT
            echo "error_count=1" >> $GITHUB_OUTPUT
            echo "‚ùå VALIDATION √âCHOU√âE"
            
            echo "üîß D√©tails des erreurs de validation affich√©es ci-dessus"
            exit 1
          fi
      
      - name: "G√©n√©ration rapport de validation"
        if: always()
        run: |
          validation_status="${{ steps.validate.outputs.validation_success }}"
          
          cat << EOF > rapport-validation-compteur.md
          # Rapport de Validation - Compteur Lignes
          
          **Artefact valid√© :** \`${{ inputs.artefact_resultats_bruts }}\`
          
          **Sch√©ma appliqu√© :** resultats-bruts-compteur
          
          **Mode strict :** ${{ inputs.mode_strict }}
          
          **R√©sultat :** $([ "$validation_status" = "true" ] && echo "‚úÖ SUCC√àS" || echo "‚ùå √âCHEC")
          
          **Timestamp :** $(date '+%Y-%m-%d %H:%M:%S')
          
          ---
          
          ## Structure attendue
          
          Le sch√©ma \`resultats-bruts-compteur\` attend :
          
          ### Cl√©s requises :
          - \`fichiers\` (array) : Liste des fichiers analys√©s
          - \`total_fichiers\` (number) : Nombre total de fichiers
          - \`timestamp\` (string) : Horodatage de l'analyse
          
          ### Cl√©s optionnelles :
          - \`stats_globales\` (object) : Statistiques g√©n√©rales
          - \`erreurs\` (array) : Erreurs rencontr√©es
          
          ### Validation des √©l√©ments imbriqu√©s :
          - Chaque √©l√©ment de \`fichiers\` doit contenir :
            - \`nom\` (string) : Nom du fichier
            - \`lignes\` (number) : Nombre de lignes
            - \`chemin\` (string) : Chemin du fichier
          
          EOF
          
          echo "üìÑ Rapport de validation g√©n√©r√©"
      
      - name: "Upload rapport de validation"
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: "rapport-validation-compteur.md"
          path: "rapport-validation-compteur.md"
          retention-days: 7
      
      - name: "R√©sum√© de validation dans l'interface"
        if: always()
        run: |
          validation_status="${{ steps.validate.outputs.validation_success }}"
          
          echo "## üîç Validation Qualiticien - Compteur Lignes" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Artefact :** \`${{ inputs.artefact_resultats_bruts }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Sch√©ma :** resultats-bruts-compteur" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "$validation_status" = "true" ]; then
            echo "**‚úÖ R√âSULTAT :** Validation r√©ussie" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "L'artefact est conforme au sch√©ma attendu." >> $GITHUB_STEP_SUMMARY
          else
            echo "**‚ùå R√âSULTAT :** Validation √©chou√©e" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "L'artefact ne respecte pas la structure requise." >> $GITHUB_STEP_SUMMARY
            echo "Consultez les logs pour plus de d√©tails." >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Mode strict :** ${{ inputs.mode_strict }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Horodatage :** $(date '+%Y-%m-%d %H:%M:%S')" >> $GITHUB_STEP_SUMMARY
