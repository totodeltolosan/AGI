name: üîó Cognitive Systems Integration Tests

on:
  pull_request:
    paths: ['eve/cognitive/**']
  push:
    branches: [main]
    paths: ['eve/cognitive/**']

jobs:
  cognitive-integration:
    name: Full Cognitive Integration
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        cognitive-module: ['brain', 'agents', 'interfaces', 'launchers']
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v6
      with:
        python-version: '3.11'
        
    - name: Install Cognitive Stack
      run: |
        pip install torch transformers scikit-learn
        pip install tkinter-modern pytest-integration
        pip install memory-profiler psutil
        
    - name: Test ${{ matrix.cognitive-module }} Integration
      run: |
        cd eve/cognitive/
        
        echo "üîó TEST INT√âGRATION: ${{ matrix.cognitive-module }}"
        
        case "${{ matrix.cognitive-module }}" in
          "brain")
            python -c "
            try:
                from brain.brain_core import CognitiveEngine
                engine = CognitiveEngine()
                print('‚úÖ Brain Core: Int√©gration OK')
            except Exception as e:
                print(f'‚ùå Brain Core: {e}')
                raise
            "
            ;;
          "agents")
            python -c "
            try:
                from agents.cognitive_agents import AgentManager
                manager = AgentManager()
                print('‚úÖ Cognitive Agents: Int√©gration OK')
            except Exception as e:
                print(f'‚ùå Cognitive Agents: {e}')
                raise
            "
            ;;
          "interfaces")
            export DISPLAY=:99
            Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
            python -c "
            try:
                from interfaces.launcher_interface import ALMAInterface
                interface = ALMAInterface()
                print('‚úÖ ALMA Interface: Int√©gration OK')
            except Exception as e:
                print(f'‚ùå ALMA Interface: {e}')
                raise
            "
            ;;
          "launchers")
            python -c "
            try:
                from launchers.cognitive_launcher import CognitiveLauncher
                launcher = CognitiveLauncher()
                print('‚úÖ Cognitive Launcher: Int√©gration OK')
            except Exception as e:
                print(f'‚ùå Cognitive Launcher: {e}')
                raise
            "
            ;;
        esac
        
    - name: Cross-Module Communication Test
      run: |
        cd eve/cognitive/
        python -c "
        print('üîó TEST COMMUNICATION INTER-MODULES')
        
        # Test communication Brain <-> Agents
        try:
            from brain.brain_core import CognitiveEngine
            from agents.cognitive_agents import AgentManager
            
            brain = CognitiveEngine()
            agents = AgentManager()
            
            # Test communication
            result = brain.process_agent_request('test_cognitive_task')
            agents.execute_brain_command('cognitive_response')
            
            print('‚úÖ Brain-Agents Communication: OK')
        except Exception as e:
            print(f'‚ö†Ô∏è Brain-Agents Communication: {e}')
        
        # Test Interface Integration
        try:
            from interfaces.launcher_interface import ALMAInterface
            interface = ALMAInterface()
            interface.initialize_cognitive_systems()
            print('‚úÖ Interface Integration: OK')
        except Exception as e:
            print(f'‚ö†Ô∏è Interface Integration: {e}')
        "
