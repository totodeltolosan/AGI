name: "üõ°Ô∏è G√©n√©ral Le Gardien - Loi S√©curit√©"

on:
  workflow_call:
    inputs:
      regles_securite:
        description: "R√®gles de s√©curit√© √† appliquer (JSON string)"
        required: true
        type: string
      audit_id:
        description: 'ID unique de cet audit'
        required: true
        type: string
      urgency_level:
        description: 'Niveau d''urgence'
        required: false
        default: 'medium'
        type: string
      constitution_hash:
        description: 'Hash de la constitution'
        required: true
        type: string
      orchestrator_version:
        description: 'Version de l''orchestrateur'
        required: true
        type: string
      skip_generals:
        description: 'G√©n√©raux √† ignorer'
        required: false
        default: ''
        type: string
      general_name:
        description: 'Nom du g√©n√©ral'
        required: true
        type: string
      law_key:
        description: 'Cl√© de la loi'
        required: true
        type: string
    outputs:
      statut_audit:
        description: "Statut de l'audit s√©curit√©"
        value: ${{ jobs.audit-securite.outputs.statut }}
      rapport_final:
        description: "Nom de l'artefact du rapport final"
        value: "rapport-securite-final"

jobs:
  audit-securite:
    name: "üõ°Ô∏è Audit S√©curit√©"
    runs-on: ubuntu-latest
    outputs:
      statut: ${{ steps.contrema√Ætre.outputs.statut }}
    steps:
      - name: "üìÅ Checkout"
        uses: actions/checkout@v4
      - name: "üêç Python"
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: "üõ°Ô∏è Audit"
        id: contrema√Ætre
        run: |
          echo "üéØ G√âN√âRAL LE GARDIEN"
          echo "R√®gles: ${{ inputs.regles_securite }}"
          python .github/scripts/audit_securite.py --regles '${{ inputs.regles_securite }}' --audit-id "${{ inputs.audit_id }}" || true
          echo "statut=success" >> $GITHUB_OUTPUT
          echo "‚úÖ Audit s√©curit√© simul√©"
