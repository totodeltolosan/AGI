name: "Travailleur : Scanner Fichiers"

on:
  workflow_call:
    inputs:
      pattern:
        description: "Pattern de fichiers à chercher"
        required: true
        type: string
      chemin_racine:
        description: "Chemin racine"
        required: true
        type: string
      exclusions:
        description: "Patterns à exclure (JSON)"
        required: false
        default: '[]'
        type: string
      nom_artefact:
        description: "Nom de l'artefact"
        required: false
        default: "liste-fichiers.json"
        type: string
    outputs:
      fichiers_trouves:
        description: "Nombre de fichiers"
        value: ${{ jobs.scan_fichiers.outputs.count }}
      artefact_path:
        description: "Chemin vers l'artefact"
        value: ${{ jobs.scan_fichiers.outputs.artifact_path }}

jobs:
  scan_fichiers:
    name: "Scan fichiers"
    runs-on: ubuntu-latest
    outputs:
      count: ${{ steps.scan.outputs.file_count }}
      artifact_path: ${{ steps.scan.outputs.artifact_path }}
    
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
      
      - name: "Setup Python"
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: "Scan fichiers"
        id: scan
        run: |
          echo "Début du scan de fichiers..."
          echo "Pattern: ${{ inputs.pattern }}"
          echo "Racine: ${{ inputs.chemin_racine }}"
          echo "Exclusions: ${{ inputs.exclusions }}"
          
          # Exécuter le script Python avec gestion d'erreur
          if python .github/scripts/travailleur_scan_fichiers.py \
            --pattern "${{ inputs.pattern }}" \
            --racine "${{ inputs.chemin_racine }}" \
            --exclusions '${{ inputs.exclusions }}' \
            --output "${{ inputs.nom_artefact }}"; then
            
            echo "Script exécuté avec succès"
            
            if [ -f "${{ inputs.nom_artefact }}" ]; then
              file_count=$(jq -r '.fichiers | length' "${{ inputs.nom_artefact }}" 2>/dev/null || echo "0")
              file_size=$(stat -c%s "${{ inputs.nom_artefact }}")
              
              echo "file_count=$file_count" >> $GITHUB_OUTPUT
              echo "artifact_path=${{ inputs.nom_artefact }}" >> $GITHUB_OUTPUT
              
              echo "Scan terminé - $file_count fichiers trouvés"
              echo "Taille artefact: $file_size bytes"
            else
              echo "ERREUR: Artefact non créé"
              echo "file_count=0" >> $GITHUB_OUTPUT
              exit 1
            fi
          else
            echo "ERREUR: Script Python a échoué"
            echo "file_count=0" >> $GITHUB_OUTPUT
            exit 1
          fi
      
      - name: "Upload artefact"
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.nom_artefact }}
          path: ${{ inputs.nom_artefact }}
          retention-days: 30
