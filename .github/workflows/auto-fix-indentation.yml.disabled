# Nom du fichier : .github/workflows/auto-fix-indentation.yml

name: Auto-Fix Code Formatting

on:
  # Se d√©clenche manuellement ou de mani√®re planifi√©e
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * *' # Tous les jours √† 2h du matin
  # Se d√©clenche aussi sur les push, pour v√©rifier la conformit√©
  push:
    branches: [ agi-main, eve-main ]

# Ajout des permissions n√©cessaires pour cr√©er une Pull Request
permissions:
  contents: write
  pull-requests: write

jobs:
  fix-code-formatting:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      # √âtape 1: R√©cup√©rer le code de la branche
      - uses: actions/checkout@v4
        with:
          # On ne sp√©cifie pas de token ici, les permissions du job suffisent
          fetch-depth: 0

      # √âtape 2: Configurer Python
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # √âtape 3: Installer les outils de formatage
      - name: Install Formatting Tools
        run: |
          python -m pip install --upgrade pip
          pip install black isort
          # Prettier est utilis√© pour YAML et JSON
          npm install -g prettier

      # √âtape 4: Appliquer le formatage sur tous les types de fichiers pertinents
      - name: Apply Code Formatting
        run: |
          echo "Formatting Python files..."
          # L'option --exclude permet de g√©rer toutes les exclusions en une seule fois
          black --line-length 88 --exclude "(\.venv|backup_.*)/" .
          isort --profile black --skip ".venv" --skip "backup_*" .

          echo "Formatting YAML and JSON files..."
          prettier --write "**/*.{yml,yaml,json}" --ignore-path .gitignore

      # √âtape 5: Cr√©er une Pull Request s'il y a des changements
      # Cette action g√®re automatiquement la d√©tection des changements,
      # la cr√©ation d'une nouvelle branche, le commit et la cr√©ation de la PR.
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          # Le token est automatiquement fourni par GitHub
          token: ${{ secrets.GITHUB_TOKEN }}
          # Configuration du commit
          commit-message: "style(auto-format): Appliquer le formatage du code"
          committer: "GitHub Action <action@github.com>"
          author: "GitHub Action <action@github.com>"
          # Configuration de la Pull Request
          title: "üé® [Auto-Format] Corrections automatiques du style de code"
          body: |
            Ce PR a √©t√© g√©n√©r√© automatiquement par le workflow `auto-fix-indentation`.

            Il contient des corrections de formatage appliqu√©es par les outils suivants :
            - **Black & Isort** pour les fichiers Python.
            - **Prettier** pour les fichiers YAML et JSON.

            Veuillez v√©rifier les changements avant de fusionner.
          branch: "auto-format/code-style-fixes" # Nom de la branche qui sera cr√©√©e
          base: ${{ github.ref_name }} # Cible la branche qui a d√©clench√© le workflow
          delete-branch: true # Supprime la branche apr√®s la fusion de la PR
          labels: |
            style
            automated pr
