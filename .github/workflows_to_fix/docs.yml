name: Deploy Documentation

on:
  push:
    branches: [ main ]
    paths: [ 'docs/**', 'README.md' ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install documentation tools
      run: |
        pip install mkdocs mkdocs-material mkdocstrings
        
    - name: Build documentation
      run: |
        mkdir -p docs
        if [ ! -f mkdocs.yml ]; then
          cat > mkdocs.yml << 'MKDOCS'
site_name: AGI-EVE Documentation
theme:
  name: material
  features:
    - navigation.tabs
    - navigation.sections
    - toc.integrate
    - navigation.top
    - search.suggest
    - search.highlight
    - content.tabs.link
    - content.code.annotation
    - content.code.copy
  language: fr
  palette:
    - scheme: default
      toggle:
        icon: material/brightness-7
        name: Switch to dark mode
      primary: teal
      accent: purple
    - scheme: slate
      toggle:
        icon: material/brightness-4
        name: Switch to light mode
      primary: teal
      accent: lime

nav:
  - Accueil: index.md
  - Architecture: architecture.md
  - API: api.md
  - Conformité: conformity.md

plugins:
  - search
  - mkdocstrings
MKDOCS
        fi
        
        # Créer la documentation de base
        cat > docs/index.md << 'INDEX'
# AGI-EVE Documentation

Bienvenue dans la documentation du projet AGI-EVE.

## Vue d'ensemble

AGI-EVE est un système d'Intelligence Artificielle Générale avancé.

## Modules principaux

- **Core**: Module central
- **EVE**: Module cognitif
- **Tools**: Outils de développement
INDEX
        
        mkdocs build
        
    - name: Setup Pages
      uses: actions/configure-pages@v3
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v2
      with:
        path: './site'
        
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2
