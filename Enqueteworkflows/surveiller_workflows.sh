#!/bin/bash

# --- CONFIGURATION ---
REPO="totodeltolosan/AGI"
BRANCH="agi-main"
LOG_FILE="/home/toni/Documents/Projet AGI/Enqueteworkflows/workflow_run.log"

# --- SCRIPT ---
echo "==================================================================="
echo "üîé Script de Surveillance des Workflows pour le projet AGI (v2)"
echo "==================================================================="
echo "D√©p√¥t   : $REPO"
echo "Branche : $BRANCH"
echo "Logs    : $LOG_FILE"
echo "-------------------------------------------------------------------"

# Vider le fichier de log pr√©c√©dent
> "$LOG_FILE"

# √âtape 1: Obtenir l'ID du dernier workflow comme point de r√©f√©rence.
# S'il n'y en a pas, on initialise √† 0.
LATEST_RUN_ID_BEFORE_START=$(gh run list --repo "$REPO" --branch "$BRANCH" --limit 1 --json databaseId --jq '.[0].databaseId' || echo "0")
if [[ -z "$LATEST_RUN_ID_BEFORE_START" ]]; then
    LATEST_RUN_ID_BEFORE_START="0"
fi

echo "[$(date +%T)] ‚è≥ Point de r√©f√©rence √©tabli. Dernier ID de run : $LATEST_RUN_ID_BEFORE_START"
echo "[$(date +%T)] ‚è≥ En attente d'une NOUVELLE ex√©cution sur la branche '$BRANCH'..."
echo "[$(date +%T)] Astuce : Faites un 'git push' dans un autre terminal pour d√©clencher."

NEW_RUN_ID=""
# √âtape 2: Boucler jusqu'√† trouver un workflow avec un ID plus r√©cent.
while true; do
    # On cherche le dernier run qui est soit en cours, soit en attente, soit termin√©
    CANDIDATE_RUN_ID=$(gh run list --repo "$REPO" --branch "$BRANCH" --limit 1 --json databaseId --jq '.[0].databaseId' || echo "0")
    
    # On v√©rifie si l'ID trouv√© est plus r√©cent que notre point de r√©f√©rence
    if [[ "$CANDIDATE_RUN_ID" -gt "$LATEST_RUN_ID_BEFORE_START" ]]; then
        NEW_RUN_ID=$CANDIDATE_RUN_ID
        echo
        echo "[$(date +%T)] ‚úÖ NOUVEAU workflow d√©tect√© ! ID de l'ex√©cution : $NEW_RUN_ID"
        echo "[$(date +%T)] üì° Connexion au flux de logs en direct..."
        echo "-------------------------------------------------------------------"
        break
    fi
    # Affiche un point pour montrer que le script est en vie et attend
    printf "."
    sleep 5
done

# √âtape 3: Surveiller l'ex√©cution du nouveau workflow en direct et sauvegarder les logs.
gh run watch "$NEW_RUN_ID" --repo "$REPO" --exit-status | tee "$LOG_FILE"

# R√©cup√©rer le statut final de l'ex√©cution
CONCLUSION=$(gh run view "$NEW_RUN_ID" --repo "$REPO" --json conclusion --jq '.conclusion')

echo "-------------------------------------------------------------------"
if [[ "$CONCLUSION" == "success" ]]; then
    echo "[$(date +%T)] ‚úÖ SUCC√àS : Le workflow (ID: $NEW_RUN_ID) a termin√© avec succ√®s."
else
    echo "[$(date +%T)] ‚ùå √âCHEC : Le workflow (ID: $NEW_RUN_ID) a √©chou√© avec le statut : $CONCLUSION."
fi
echo "Logs complets sauvegard√©s dans : $LOG_FILE"
echo "==================================================================="

